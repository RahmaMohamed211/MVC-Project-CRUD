@model IEnumerable< RoleViewModel>
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string viewDataMessage = ViewData["Message"] as string; //enforce type safety
    string viewBagMessage = ViewBag.Message; //can't enforce type safety ->not require type conversion
}
@if (!string.IsNullOrEmpty(TempData["Message"] as string))
{
    <div class="alert alert-primary">
        @TempData["Message"]
    </div>

}

<h1>All Role</h1>

<a asp-controller="Role" asp-action="Create" class="btn btn-primary mt-5"> Create New Role</a>
<br />

<div class="row justify-content-center align-items-center mb-5">
    <form class="row  col-8 offset-1 ">
        <div class="col-8">
            <input type="text" class="form-control" name="name" placeholder="Search By name" />
        </div>
        <div class="col-4">
            <input type="submit" value="Search" class="btn btn-primary" />

        </div>
    </form>
</div>
@if (Model.Count() > 0)
{
    <table class="table table-striped table-hover">
        <thead>
            <tr>
                <th>@Html.DisplayNameFor(R=>R.Id)</th>
                <th>@Html.DisplayNameFor(R=>R.RoleName)</th>




                <th>Detailes</th>
                <th>Update</th>
                <th>Delete</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var role in Model)
            {
                <tr>

                    <td>@Html.DisplayFor(R=>role.Id)</td>
                    <td>@Html.DisplayFor(R=>role.RoleName)</td>




                    <partial name="_ButtonPartial" model="@role.Id" />
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <div class="mt-5 alert  alert-warning">
        <h3>There is NO Roles</h3>
    </div>
}







